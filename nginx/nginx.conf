user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    map $http_upgrade $connection_upgrade {
            default upgrade;
            ''      close;
        }

    upstream jupyter {
        server jupyter:8888 fail_timeout=0;
    }
    upstream portainer {
        server portainer:9000;
    }
    upstream airflow {
        server airflow:8080;
    }
    upstream react {
        server react:3000;
    }
    upstream minio {
        server minio:9000;
    }  
    
    server {
        listen 80;
        return 302 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl;
        client_max_body_size 50M;

        ssl_certificate /data/cert.crt;
        ssl_certificate_key /data/key.key;

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_dhparam /etc/ssl/certs/dhparam.pem;
        ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_stapling on;
        ssl_stapling_verify on;
        add_header Strict-Transport-Security max-age=15768000;


        # Expose logs to "docker logs".
        # See https://github.com/nginxinc/docker-nginx/blob/master/Dockerfile#L12-L14
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        location / {
            proxy_pass http://jupyter;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location ~* /(/api/kernels/[^/]+/(channels|iopub|shell|stdin)|terminals/websocket)/? {
            proxy_pass http://jupyter;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }
        location /portainer {
            proxy_http_version 1.1;
            proxy_set_header Host              $http_host;   # required for docker client's sake
            proxy_set_header X-Real-IP         $remote_addr; # pass on real client's IP
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout                 900;

            proxy_set_header Connection "";
            proxy_buffers 32 4k;
            proxy_pass http://portainer/;
        }
        location /portainer/api/websocket {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_pass http://portainer/api/websocket/;
        }
        location /airflow {
            proxy_pass http://localhost:8080;
            proxy_set_header Host $host;
            proxy_redirect off;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        location /react {
            proxy_pass http://react;
            proxy_set_header        Host $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;
        }
        location /react/sockjs-node {
            proxy_pass http://react;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }
        location /django {
            proxy_pass http://django:8000/;
            rewrite ^/django(.*)$ $1 break;
        }
        location /minio {
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            # proxy_ssl_session_reuse on; # enable this if you are internally connecting over SSL
            proxy_read_timeout 15m; # Default value is 60s which is not sufficient for MinIO.
            proxy_send_timeout 15m; # Default value is 60s which is not sufficient for MinIO.
            proxy_request_buffering off; # Disable any internal request bufferring.
            proxy_pass http://minio;
        }
    }
}