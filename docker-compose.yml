version: "3.7"

services: 
  nginx:
    build: 
      context: ./nginx
      dockerfile: Dockerfile.dev
    restart: always
    ports: 
      - 3050:80
  django:
    build: 
      context: ./backend/django-user-api/ 
    environment: 
      - DB_HOST=$DB_HOST
      - DB_NAME=$DB_NAME
      - DB_USER=$DB_USER
      - DB_PASS=$DB_PASS
    volumes: 
      - ./backend/django-user-api/app:/django-user-api
    command: >
      sh -c "python manage.py wait_for_db && 
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    ports: 
      - $USER_PORT:8000
    depends_on: 
      - postgres
      - redis
  postgres:
    image: postgres
    restart: always
    environment: 
      - POSTGRES_DB=$POSTGRES_DB
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
    volumes: 
      - postgres:/var/lib/postgresql/data
      - ./backend/postgres/service:/docker-entrypoint-initdb.d
  redis:
    image: redis
    restart: always
    volumes:
      - redis:/data
  minio:
    image: minio/minio
    restart: always
    environment:
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=supersecretpassword
    volumes:
     - minio:/data
    ports:
        - 9000:9000
    command: server /data
  react:
    build: 
      context: ./frontend/react-landing-page
      dockerfile: Dockerfile.dev
    environment: 
      - CI=true   
    volumes: 
      - /react-landing-page/node_modules
      - ./frontend/react-landing-page:/react-landing-page
    ports: 
      - 3000:3000
  jupyter:
    build: 
      context: ./jupyter-lab
    volumes: 
      - ./jupyter-lab/:/jupyter-lab
    ports: 
      - "8888:8888"
    depends_on: 
      - postgres
      - minio
  airflow:
    image: puckel/docker-airflow
    environment: 
      - LOAD_EX=n
      - EXECUTOR=Local
    ports:
      - 8081:8080
    depends_on:
      - postgres
    command: webserver
volumes:
  postgres:
  minio:
  redis:



  
