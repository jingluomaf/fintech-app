version: "3.7"

services: 
  user:
    build: 
      context: ./backend/django-user-api/
    
    volumes: 
      - ./backend/django-user-api/app:/django-user-api
    command: >
      sh -c "python manage.py wait_for_db && 
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    environment: 
      - DB_HOST=db
      - DB_NAME=user
      - DB_USER=postgres
      - DB_PASS=supersecretpassword
    ports: 
      - "8000:8000"
    networks: 
      - backend
    depends_on: 
      - db

  db:
    image: postgres:10-alpine
    environment: 
      - POSTGRES_DB=user
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=supersecretpassword
    networks: 
      - backend

  minio:
    image: minio/minio
    environment:
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=supersecretpassword
    volumes:
     - minio-data:/data
    ports:
        - 9000:9000
    networks: 
      - backend
    command: server /data

  web:
    build: 
      context: ./frontend/react-landing-page
      dockerfile: Dockerfile.dev
    environment: 
      - CI=true   
    volumes: 
      - /react-landing-page/node_modules
      - ./frontend/react-landing-page:/react-landing-page
    ports: 
      - "3000:3000"
    networks: 
      - frontend
    
  jupyter:
    build: 
      context: ./jupyter-lab
    volumes: 
      - ./jupyter-lab/:/jupyter-lab
    ports: 
      - "8888:8888"
    networks: 
      - lab
    depends_on: 
      - db
      - minio
    

networks:
  frontend:
  backend:
  lab:
volumes:
  minio-data:



  
